<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>qrcode</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>CodeBlock</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>func generateQRCode(text: String, color: UIColor, bgColor: UIColor, outputScale: CGFloat) -&gt; UIImage? {
    let data = text.data(using: .isoLatin1, allowLossyConversion: false)
    let filter = CIFilter(name: "CIQRCodeGenerator")
    filter?.setValue(data, forKey: "inputMessage")
    filter?.setValue("Q", forKey: "inputCorrectionLevel")
    
    guard let colorFilter = CIFilter(name: "CIFalseColor") else { return nil }
    
    colorFilter.setDefaults()
    colorFilter.setValue(filter?.outputImage, forKey: "inputImage")
    colorFilter.setValue(CIColor(color:color), forKey: "inputColor0")
    colorFilter.setValue(CIColor(color:bgColor), forKey: "inputColor1")
    let outputCIImage = colorFilter.outputImage!
    
    let ciImageSize = outputCIImage.extent.size
    let scale = outputScale * 25 / 23

    guard let cgImage = CIContext(options: nil).createCGImage(outputCIImage, from: outputCIImage.extent) else { return nil }
    let size = CGSize(width: ciImageSize.width * scale, height: ciImageSize.height * scale)
    
    UIGraphicsBeginImageContextWithOptions(size, true, 0)
    guard let context = UIGraphicsGetCurrentContext() else { return nil }
    context.interpolationQuality = .none
    context.translateBy(x: 0, y: size.height)
    context.scaleBy(x: 1.0, y: -1.0)
    context.draw(cgImage, in: context.boundingBoxOfClipPath)
    let result = UIGraphicsGetImageFromCurrentImageContext()
    UIGraphicsEndImageContext()

    return result
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>ECDA397C-CE14-4DE0-ABE8-101050A8A554</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift - Generate QR Code</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
